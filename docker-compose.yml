version: "3.8"

services:
  vault :
    build :
      context: ./vault
      dockerfile: Dockerfile
    container_name: vault
    expose:
      - "8200"
    env_file:
      - .env
    networks:
      - transcendance
      - elk

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
      - "5601:5601"
    depends_on:
      - vault
    networks:
      - transcendance
    volumes:
      - storage_api:/front/client/static/uploads


  postgres:
    build:
      context: ./db
      dockerfile: Dockerfile
    container_name: postgres
    networks:
      - transcendance
    restart: always

    env_file:
      - .env
    depends_on:
      - vault
  rest_api:
    build:
      context: ./rest_api
      dockerfile: Dockerfile
    container_name: rest_api
    networks:
      - transcendance
    restart: always
    depends_on:
      - postgres
      - vault
    env_file:
      - .env
    volumes:
      - storage_api:/api/static
  
  game:
    build:
      context: ./game
      dockerfile: Dockerfile
    container_name: game
    expose:
      - "8001"
    networks:
      - transcendance
    restart: always
    env_file:
      - .env
    depends_on:
      - postgres
      - vault
    
  # Elasticsearch Service
  elasticsearch:
    container_name: elasticsearch
    build:
      context: ./elk/elasticsearch
      dockerfile: Dockerfile
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:9200/_cluster/health | grep -vq '\"status\":\"red\"'"]
      interval: 30s
      timeout: 30s
      retries: 3
    ports:
      - "9200:9200"
      - "9300:9300"
    restart: always
    env_file:
      - .env
    networks:
      - elk

#Logstash Service
  logstash:
    container_name: logstash
    build:
      context: ./elk/logstash
      dockerfile: Dockerfile
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9600"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: always
    ports:
      - "5000:5000"
      - "9600:9600"
      - "5140:5140"
    networks:
      - elk
      - transcendance
    depends_on:
      - elasticsearch
    env_file:
      - .env

  # Kibana Service
  kibana:
    container_name: kibana
    build:
      context: ./elk/kibana
      dockerfile: Dockerfile
    expose:
      - "5601"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5601"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: always
    networks:
      - elk
      - transcendance
    depends_on:
      - elasticsearch
    env_file:
      - .env

networks:
  transcendance:
    driver: bridge
  elk:
    driver: bridge

volumes:
  storage_api:
